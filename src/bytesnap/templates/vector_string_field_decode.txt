        std::optional<uint32_t> {{ fieldname }}_size = reader.read_uint32_t();
        if (!{{ fieldname }}_size) return false;
        target.{{ fieldname }}.clear();
        for (int i = 0; i < {{ fieldname }}_size.value(); i++) {
            std::optional<std::string_view> {{ fieldname }} = reader.get_string_view();
            if (!{{ fieldname }}) return false;
            target.{{ fieldname }}.emplace_back({{ fieldname }}.value());
        }
